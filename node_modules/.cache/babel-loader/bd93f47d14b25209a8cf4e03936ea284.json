{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Documents/Projects/stp-react/stp-react/src/components/schoolProfile.js\";\nimport React from 'react';\nimport ProfileData from '../data/schoolProfiles.json';\n\nfunction SchoolProfile({\n  match\n}) {\n  //console.log(match.params.name);\n  // Select correct school from profile list using match parameter.\n  const schoolSelector = ProfileData.filter(value => {\n    if (value.name === match.params.name) {\n      return value;\n    }\n  }); //console.log(schoolSelector);\n  // Create a list of programs conducted at the selected school.\n  //TODO --> clean the program title from \"initialAssessment\" to \"Initial Assessment\".\n\n  const programSelector = schoolSelector.map(program => {\n    let schoolPrograms = [];\n    let programTitles = Object.keys(program);\n    let programValues = Object.values(program); //console.log(programTitles);\n    //console.log(programValues);\n\n    for (let i = 0; i < programTitles.length; i++) {\n      if (programValues[i] === 'TRUE') {\n        let regex = /(?=[A-Z])/;\n        let splitTitle = programTitles[i].split(regex);\n        console.log(splitTitle);\n        let newTitle = [];\n\n        for (let j = 0; j < splitTitle.length; j++) {\n          let capitalized = splitTitle[j].charAt(0).toUpperCase();\n          newTitle.push(capitalized + splitTitle[j].slice(1));\n        }\n\n        let outName = newTitle.join(' ');\n        console.log(outName);\n        schoolPrograms.push(outName);\n      }\n    }\n\n    return schoolPrograms;\n  }); // console.log(programSelector);\n  // create cards for each program conducted at the selected school.\n\n  const cardCreator = programSelector[0].map(program => {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      class: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card mx-auto\",\n      style: {\n        width: 45 + 'vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"...\",\n      class: \"card-img-top\",\n      alt: \"...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, program), React.createElement(\"p\", {\n      class: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")))));\n  });\n  return React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, cardCreator);\n}\n\n;\nexport default SchoolProfile;","map":{"version":3,"sources":["/Users/administrator/Documents/Projects/stp-react/stp-react/src/components/schoolProfile.js"],"names":["React","ProfileData","SchoolProfile","match","schoolSelector","filter","value","name","params","programSelector","map","program","schoolPrograms","programTitles","Object","keys","programValues","values","i","length","regex","splitTitle","split","console","log","newTitle","j","capitalized","charAt","toUpperCase","push","slice","outName","join","cardCreator","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProfileData from '../data/schoolProfiles.json';\n\n\nfunction SchoolProfile({match}) {\n  //console.log(match.params.name);\n\n  // Select correct school from profile list using match parameter.\n  const schoolSelector = ProfileData.filter(value => {\n    if (value.name === match.params.name){\n      return value;\n    }\n    });\n\n  //console.log(schoolSelector);\n\n  // Create a list of programs conducted at the selected school.\n  //TODO --> clean the program title from \"initialAssessment\" to \"Initial Assessment\".\n\n  const programSelector = schoolSelector.map((program) => {\n    let schoolPrograms = [];\n      let programTitles = Object.keys(program);\n      let programValues = Object.values(program);\n      //console.log(programTitles);\n      //console.log(programValues);\n      for (let i = 0; i < programTitles.length; i++){\n        if (programValues[i] === 'TRUE'){\n          let regex = /(?=[A-Z])/;\n          let splitTitle = programTitles[i].split(regex);\n          console.log(splitTitle);\n          let newTitle = [];\n          for (let j = 0; j < splitTitle.length; j++){\n            let capitalized = splitTitle[j].charAt(0).toUpperCase();\n            newTitle.push(capitalized + splitTitle[j].slice(1));\n          }\n          let outName = newTitle.join(' ');\n          console.log(outName);\n          schoolPrograms.push(outName);\n      }\n    }\n    return schoolPrograms;\n  })\n\n  // console.log(programSelector);\n\n  // create cards for each program conducted at the selected school.\n  const cardCreator = programSelector[0].map((program) => {\n    return <>\n      <div class=\"col-sm-6\">\n        <div class=\"card mx-auto\" style={{width: 45 + 'vw'}}>\n          <img src=\"...\" class=\"card-img-top\" alt=\"...\"></img>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{program}</h5>\n            <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n          </div>\n        </div>\n      </div>\n    </>\n  })\n\n  return (\n      <div class=\"row\">\n          {cardCreator}\n        </div>\n\n  );\n};\n\nexport default SchoolProfile;\n"]},"metadata":{},"sourceType":"module"}